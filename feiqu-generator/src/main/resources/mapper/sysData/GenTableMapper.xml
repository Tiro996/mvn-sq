<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feiqu.generator.mapper.sysData.GenTableMapper">
    <resultMap id="BaseResultMap" type="com.feiqu.generator.model.sysData.GenTable">
        <id column="table_id" jdbcType="BIGINT" property="tableId"/>
        <result column="table_name" jdbcType="VARCHAR" property="tableName"/>
        <result column="table_comment" jdbcType="VARCHAR" property="tableComment"/>
        <result column="class_name" jdbcType="VARCHAR" property="className"/>
        <result column="tpl_category" jdbcType="VARCHAR" property="tplCategory"/>
        <result column="package_name" jdbcType="VARCHAR" property="packageName"/>
        <result column="module_name" jdbcType="VARCHAR" property="moduleName"/>
        <result column="business_name" jdbcType="VARCHAR" property="businessName"/>
        <result column="function_name" jdbcType="VARCHAR" property="functionName"/>
        <result column="function_author" jdbcType="VARCHAR" property="functionAuthor"/>
        <result column="options" jdbcType="VARCHAR" property="options"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <collection property="columns" javaType="java.util.List" resultMap="GenTableColumnResult"/>
    </resultMap>

    <resultMap type="com.feiqu.generator.model.sysData.GenTableColumn" id="GenTableColumnResult">
        <id property="columnId" column="column_id"/>
        <result property="tableId" column="table_id"/>
        <result property="columnName" column="column_name"/>
        <result property="columnComment" column="column_comment"/>
        <result property="columnType" column="column_type"/>
        <result property="javaType" column="java_type"/>
        <result property="javaField" column="java_field"/>
        <result property="isPk" column="is_pk"/>
        <result property="isIncrement" column="is_increment"/>
        <result property="isRequired" column="is_required"/>
        <result property="isInsert" column="is_insert"/>
        <result property="isEdit" column="is_edit"/>
        <result property="isList" column="is_list"/>
        <result property="isQuery" column="is_query"/>
        <result property="queryType" column="query_type"/>
        <result property="htmlType" column="html_type"/>
        <result property="dictType" column="dict_type"/>
        <result property="sort" column="sort"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    table_id, table_name, table_comment, class_name, tpl_category, package_name, module_name, 
    business_name, function_name, function_author, options, create_by, create_time, update_by, 
    update_time, remark
  </sql>

    <select id="selectDbTableList" parameterType="com.feiqu.generator.model.sysData.GenTable" resultMap="BaseResultMap">
        select table_name, table_comment, create_time, update_time from information_schema.tables
        where table_schema = (select database())
        AND table_name NOT LIKE 'qrtz_%' AND table_name NOT LIKE 'gen_%'
        AND table_name NOT IN (select table_name from gen_table)
        <if test="tableName != null and tableName != ''">
            AND lower(table_name) like lower(concat('%', #{tableName}, '%'))
        </if>
        <if test="tableComment != null and tableComment != ''">
            AND lower(table_comment) like lower(concat('%', #{tableComment}, '%'))
        </if>
    </select>

    <select id="selectDbTableListByNames" resultMap="BaseResultMap">
        select table_name, table_comment, create_time, update_time from information_schema.tables
        where table_name NOT LIKE 'qrtz_%' and table_name NOT LIKE 'gen_%' and table_schema = (select database())
        and table_name in
        <foreach collection="array" item="name" open="(" separator="," close=")">
            #{name}
        </foreach>
    </select>

    <select id="selectTableByName" parameterType="String" resultMap="BaseResultMap">
		select table_name, table_comment, create_time, update_time from information_schema.tables
		where table_comment <![CDATA[ <> ]]> '' and table_schema = (select database())
		and table_name = #{tableName}
	</select>

    <select id="selectGenTableById" parameterType="Long" resultMap="BaseResultMap">
	    SELECT t.table_id, t.table_name, t.table_comment, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.options, t.remark,
			   c.column_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
		FROM gen_table t
			 LEFT JOIN gen_table_column c ON t.table_id = c.table_id
		where t.table_id = #{tableId}
	</select>

    <select id="selectGenTableByName" parameterType="String" resultMap="BaseResultMap">
	    SELECT t.table_id, t.table_name, t.table_comment, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.options, t.remark,
			   c.column_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
		FROM gen_table t
			 LEFT JOIN gen_table_column c ON t.table_id = c.table_id
		where t.table_name = #{tableName}
	</select>

    <select id="selectByExample" parameterType="com.feiqu.generator.model.sysData.GenTableExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from gen_table
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gen_table
        where table_id = #{tableId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gen_table
    where table_id = #{tableId,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.feiqu.generator.model.sysData.GenTableExample">
        delete from gen_table
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.feiqu.generator.model.sysData.GenTable">
        <selectKey keyProperty="tableId" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into gen_table (table_name, table_comment, class_name,
        tpl_category, package_name, module_name,
        business_name, function_name, function_author,
        options, create_by, create_time,
        update_by, update_time, remark
        )
        values (#{tableName,jdbcType=VARCHAR}, #{tableComment,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR},
        #{tplCategory,jdbcType=VARCHAR}, #{packageName,jdbcType=VARCHAR}, #{moduleName,jdbcType=VARCHAR},
        #{businessName,jdbcType=VARCHAR}, #{functionName,jdbcType=VARCHAR}, #{functionAuthor,jdbcType=VARCHAR},
        #{options,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.feiqu.generator.model.sysData.GenTable">
        <selectKey keyProperty="tableId" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into gen_table
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tableName != null">
                table_name,
            </if>
            <if test="tableComment != null">
                table_comment,
            </if>
            <if test="className != null">
                class_name,
            </if>
            <if test="tplCategory != null">
                tpl_category,
            </if>
            <if test="packageName != null">
                package_name,
            </if>
            <if test="moduleName != null">
                module_name,
            </if>
            <if test="businessName != null">
                business_name,
            </if>
            <if test="functionName != null">
                function_name,
            </if>
            <if test="functionAuthor != null">
                function_author,
            </if>
            <if test="options != null">
                options,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tableName != null">
                #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="tableComment != null">
                #{tableComment,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                #{className,jdbcType=VARCHAR},
            </if>
            <if test="tplCategory != null">
                #{tplCategory,jdbcType=VARCHAR},
            </if>
            <if test="packageName != null">
                #{packageName,jdbcType=VARCHAR},
            </if>
            <if test="moduleName != null">
                #{moduleName,jdbcType=VARCHAR},
            </if>
            <if test="businessName != null">
                #{businessName,jdbcType=VARCHAR},
            </if>
            <if test="functionName != null">
                #{functionName,jdbcType=VARCHAR},
            </if>
            <if test="functionAuthor != null">
                #{functionAuthor,jdbcType=VARCHAR},
            </if>
            <if test="options != null">
                #{options,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.feiqu.generator.model.sysData.GenTableExample"
            resultType="java.lang.Long">
        select count(*) from gen_table
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update gen_table
        <set>
            <if test="record.tableId != null">
                table_id = #{record.tableId,jdbcType=BIGINT},
            </if>
            <if test="record.tableName != null">
                table_name = #{record.tableName,jdbcType=VARCHAR},
            </if>
            <if test="record.tableComment != null">
                table_comment = #{record.tableComment,jdbcType=VARCHAR},
            </if>
            <if test="record.className != null">
                class_name = #{record.className,jdbcType=VARCHAR},
            </if>
            <if test="record.tplCategory != null">
                tpl_category = #{record.tplCategory,jdbcType=VARCHAR},
            </if>
            <if test="record.packageName != null">
                package_name = #{record.packageName,jdbcType=VARCHAR},
            </if>
            <if test="record.moduleName != null">
                module_name = #{record.moduleName,jdbcType=VARCHAR},
            </if>
            <if test="record.businessName != null">
                business_name = #{record.businessName,jdbcType=VARCHAR},
            </if>
            <if test="record.functionName != null">
                function_name = #{record.functionName,jdbcType=VARCHAR},
            </if>
            <if test="record.functionAuthor != null">
                function_author = #{record.functionAuthor,jdbcType=VARCHAR},
            </if>
            <if test="record.options != null">
                options = #{record.options,jdbcType=VARCHAR},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update gen_table
        set table_id = #{record.tableId,jdbcType=BIGINT},
        table_name = #{record.tableName,jdbcType=VARCHAR},
        table_comment = #{record.tableComment,jdbcType=VARCHAR},
        class_name = #{record.className,jdbcType=VARCHAR},
        tpl_category = #{record.tplCategory,jdbcType=VARCHAR},
        package_name = #{record.packageName,jdbcType=VARCHAR},
        module_name = #{record.moduleName,jdbcType=VARCHAR},
        business_name = #{record.businessName,jdbcType=VARCHAR},
        function_name = #{record.functionName,jdbcType=VARCHAR},
        function_author = #{record.functionAuthor,jdbcType=VARCHAR},
        options = #{record.options,jdbcType=VARCHAR},
        create_by = #{record.createBy,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_by = #{record.updateBy,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.feiqu.generator.model.sysData.GenTable">
        update gen_table
        <set>
            <if test="tableName != null">
                table_name = #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="tableComment != null">
                table_comment = #{tableComment,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                class_name = #{className,jdbcType=VARCHAR},
            </if>
            <if test="tplCategory != null">
                tpl_category = #{tplCategory,jdbcType=VARCHAR},
            </if>
            <if test="packageName != null">
                package_name = #{packageName,jdbcType=VARCHAR},
            </if>
            <if test="moduleName != null">
                module_name = #{moduleName,jdbcType=VARCHAR},
            </if>
            <if test="businessName != null">
                business_name = #{businessName,jdbcType=VARCHAR},
            </if>
            <if test="functionName != null">
                function_name = #{functionName,jdbcType=VARCHAR},
            </if>
            <if test="functionAuthor != null">
                function_author = #{functionAuthor,jdbcType=VARCHAR},
            </if>
            <if test="options != null">
                options = #{options,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where table_id = #{tableId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.feiqu.generator.model.sysData.GenTable">
    update gen_table
    set table_name = #{tableName,jdbcType=VARCHAR},
      table_comment = #{tableComment,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      tpl_category = #{tplCategory,jdbcType=VARCHAR},
      package_name = #{packageName,jdbcType=VARCHAR},
      module_name = #{moduleName,jdbcType=VARCHAR},
      business_name = #{businessName,jdbcType=VARCHAR},
      function_name = #{functionName,jdbcType=VARCHAR},
      function_author = #{functionAuthor,jdbcType=VARCHAR},
      options = #{options,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where table_id = #{tableId,jdbcType=BIGINT}
  </update>

</mapper>