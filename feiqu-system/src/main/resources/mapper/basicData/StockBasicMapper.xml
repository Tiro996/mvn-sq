<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feiqu.system.mapper.basicData.StockBasicMapper">
    <resultMap id="BaseResultMap" type="com.feiqu.system.model.basicData.StockBasic">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="ts_code" jdbcType="VARCHAR" property="tsCode"/>
        <result column="symbol" jdbcType="VARCHAR" property="symbol"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="area" jdbcType="VARCHAR" property="area"/>
        <result column="industry" jdbcType="VARCHAR" property="industry"/>
        <result column="market" jdbcType="VARCHAR" property="market"/>
        <result column="list_date" jdbcType="VARCHAR" property="listDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, ts_code, symbol, name, area, industry, market, list_date
  </sql>
    <select id="selectByExample" parameterType="com.feiqu.system.model.basicData.StockBasicExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from stock_basic
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_basic
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock_basic
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.feiqu.system.model.basicData.StockBasicExample">
        delete from stock_basic
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.feiqu.system.model.basicData.StockBasic">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into stock_basic (ts_code, symbol, name,
        area, industry, market,
        list_date)
        values (#{tsCode,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{area,jdbcType=VARCHAR}, #{industry,jdbcType=VARCHAR}, #{market,jdbcType=VARCHAR},
        #{listDate,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.feiqu.system.model.basicData.StockBasic">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into stock_basic
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tsCode != null">
                ts_code,
            </if>
            <if test="symbol != null">
                symbol,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="industry != null">
                industry,
            </if>
            <if test="market != null">
                market,
            </if>
            <if test="listDate != null">
                list_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tsCode != null">
                #{tsCode,jdbcType=VARCHAR},
            </if>
            <if test="symbol != null">
                #{symbol,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="industry != null">
                #{industry,jdbcType=VARCHAR},
            </if>
            <if test="market != null">
                #{market,jdbcType=VARCHAR},
            </if>
            <if test="listDate != null">
                #{listDate,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.feiqu.system.model.basicData.StockBasicExample"
            resultType="java.lang.Long">
        select count(*) from stock_basic
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update stock_basic
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.tsCode != null">
                ts_code = #{record.tsCode,jdbcType=VARCHAR},
            </if>
            <if test="record.symbol != null">
                symbol = #{record.symbol,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=VARCHAR},
            </if>
            <if test="record.industry != null">
                industry = #{record.industry,jdbcType=VARCHAR},
            </if>
            <if test="record.market != null">
                market = #{record.market,jdbcType=VARCHAR},
            </if>
            <if test="record.listDate != null">
                list_date = #{record.listDate,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update stock_basic
        set id = #{record.id,jdbcType=INTEGER},
        ts_code = #{record.tsCode,jdbcType=VARCHAR},
        symbol = #{record.symbol,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        area = #{record.area,jdbcType=VARCHAR},
        industry = #{record.industry,jdbcType=VARCHAR},
        market = #{record.market,jdbcType=VARCHAR},
        list_date = #{record.listDate,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.feiqu.system.model.basicData.StockBasic">
        update stock_basic
        <set>
            <if test="tsCode != null">
                ts_code = #{tsCode,jdbcType=VARCHAR},
            </if>
            <if test="symbol != null">
                symbol = #{symbol,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="industry != null">
                industry = #{industry,jdbcType=VARCHAR},
            </if>
            <if test="market != null">
                market = #{market,jdbcType=VARCHAR},
            </if>
            <if test="listDate != null">
                list_date = #{listDate,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.feiqu.system.model.basicData.StockBasic">
    update stock_basic
    set ts_code = #{tsCode,jdbcType=VARCHAR},
      symbol = #{symbol,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      industry = #{industry,jdbcType=VARCHAR},
      market = #{market,jdbcType=VARCHAR},
      list_date = #{listDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>