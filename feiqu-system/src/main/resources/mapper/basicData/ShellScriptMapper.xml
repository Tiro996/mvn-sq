<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feiqu.system.mapper.basicData.ShellScriptMapper">
  <resultMap id="BaseResultMap" type="com.feiqu.system.model.basicData.ShellScript">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="dictionary" jdbcType="VARCHAR" property="dictionary" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="shell_file_name" jdbcType="VARCHAR" property="shellFileName" />
    <result column="shell_name" jdbcType="VARCHAR" property="shellName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.feiqu.system.model.basicData.ShellScript">
    <result column="bash" jdbcType="LONGVARCHAR" property="bash" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, remark, type, dictionary, gmt_create, operator, shell_file_name, shell_name
  </sql>
  <sql id="Blob_Column_List">
    bash
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.feiqu.system.model.basicData.ShellScriptExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shell_script
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.feiqu.system.model.basicData.ShellScriptExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shell_script
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shell_script
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shell_script
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.feiqu.system.model.basicData.ShellScriptExample">
    delete from shell_script
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.feiqu.system.model.basicData.ShellScript">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into shell_script (remark, type, dictionary, 
      gmt_create, operator, shell_file_name, 
      shell_name, bash)
    values (#{remark,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{dictionary,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, #{shellFileName,jdbcType=VARCHAR}, 
      #{shellName,jdbcType=VARCHAR}, #{bash,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.feiqu.system.model.basicData.ShellScript">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into shell_script
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="remark != null">
        remark,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="dictionary != null">
        dictionary,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="shellFileName != null">
        shell_file_name,
      </if>
      <if test="shellName != null">
        shell_name,
      </if>
      <if test="bash != null">
        bash,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="dictionary != null">
        #{dictionary,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="shellFileName != null">
        #{shellFileName,jdbcType=VARCHAR},
      </if>
      <if test="shellName != null">
        #{shellName,jdbcType=VARCHAR},
      </if>
      <if test="bash != null">
        #{bash,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.feiqu.system.model.basicData.ShellScriptExample" resultType="java.lang.Long">
    select count(*) from shell_script
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shell_script
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.dictionary != null">
        dictionary = #{record.dictionary,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.shellFileName != null">
        shell_file_name = #{record.shellFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.shellName != null">
        shell_name = #{record.shellName,jdbcType=VARCHAR},
      </if>
      <if test="record.bash != null">
        bash = #{record.bash,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update shell_script
    set id = #{record.id,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      dictionary = #{record.dictionary,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR},
      shell_file_name = #{record.shellFileName,jdbcType=VARCHAR},
      shell_name = #{record.shellName,jdbcType=VARCHAR},
      bash = #{record.bash,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shell_script
    set id = #{record.id,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      dictionary = #{record.dictionary,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR},
      shell_file_name = #{record.shellFileName,jdbcType=VARCHAR},
      shell_name = #{record.shellName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.feiqu.system.model.basicData.ShellScript">
    update shell_script
    <set>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="dictionary != null">
        dictionary = #{dictionary,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="shellFileName != null">
        shell_file_name = #{shellFileName,jdbcType=VARCHAR},
      </if>
      <if test="shellName != null">
        shell_name = #{shellName,jdbcType=VARCHAR},
      </if>
      <if test="bash != null">
        bash = #{bash,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.feiqu.system.model.basicData.ShellScript">
    update shell_script
    set remark = #{remark,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      dictionary = #{dictionary,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      shell_file_name = #{shellFileName,jdbcType=VARCHAR},
      shell_name = #{shellName,jdbcType=VARCHAR},
      bash = #{bash,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.feiqu.system.model.basicData.ShellScript">
    update shell_script
    set remark = #{remark,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      dictionary = #{dictionary,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      shell_file_name = #{shellFileName,jdbcType=VARCHAR},
      shell_name = #{shellName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>